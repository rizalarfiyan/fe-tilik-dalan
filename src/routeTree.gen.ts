/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthVerifyImport } from './routes/_auth/verify'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
	id: '/_auth',
	getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
	id: '/',
	path: '/',
	getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
	id: '/login',
	path: '/login',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

const AuthVerifyRoute = AuthVerifyImport.update({
	id: '/verify',
	path: '/verify',
	getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/verify.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/': {
			id: '/'
			path: '/'
			fullPath: '/'
			preLoaderRoute: typeof IndexLazyImport
			parentRoute: typeof rootRoute
		}
		'/_auth': {
			id: '/_auth'
			path: ''
			fullPath: ''
			preLoaderRoute: typeof AuthImport
			parentRoute: typeof rootRoute
		}
		'/_auth/verify': {
			id: '/_auth/verify'
			path: '/verify'
			fullPath: '/verify'
			preLoaderRoute: typeof AuthVerifyImport
			parentRoute: typeof AuthImport
		}
		'/_auth/login': {
			id: '/_auth/login'
			path: '/login'
			fullPath: '/login'
			preLoaderRoute: typeof AuthLoginLazyImport
			parentRoute: typeof AuthImport
		}
	}
}

// Create and export the route tree

interface AuthRouteChildren {
	AuthVerifyRoute: typeof AuthVerifyRoute
	AuthLoginLazyRoute: typeof AuthLoginLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
	AuthVerifyRoute: AuthVerifyRoute,
	AuthLoginLazyRoute: AuthLoginLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
	'/': typeof IndexLazyRoute
	'': typeof AuthRouteWithChildren
	'/verify': typeof AuthVerifyRoute
	'/login': typeof AuthLoginLazyRoute
}

export interface FileRoutesByTo {
	'/': typeof IndexLazyRoute
	'': typeof AuthRouteWithChildren
	'/verify': typeof AuthVerifyRoute
	'/login': typeof AuthLoginLazyRoute
}

export interface FileRoutesById {
	__root__: typeof rootRoute
	'/': typeof IndexLazyRoute
	'/_auth': typeof AuthRouteWithChildren
	'/_auth/verify': typeof AuthVerifyRoute
	'/_auth/login': typeof AuthLoginLazyRoute
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath
	fullPaths: '/' | '' | '/verify' | '/login'
	fileRoutesByTo: FileRoutesByTo
	to: '/' | '' | '/verify' | '/login'
	id: '__root__' | '/' | '/_auth' | '/_auth/verify' | '/_auth/login'
	fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
	IndexLazyRoute: typeof IndexLazyRoute
	AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
	IndexLazyRoute: IndexLazyRoute,
	AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/verify",
        "/_auth/login"
      ]
    },
    "/_auth/verify": {
      "filePath": "_auth/verify.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
